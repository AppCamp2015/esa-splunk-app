[Generate pollution_min_max_by_type.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = `pollution_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| stats max(Value) min(Value) by type\
| outputlookup pollution_min_max_by_type.csv

[Generate pollution_country_norm.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = `pollution_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| eventstats max(Value) min(Value) by type\
`make_eu_relative`\
| stats avg(*) AS *\
| transpose 300\
| rename "row 1" AS Value "column" AS Country\
| eventstats max(Value) AS MAX\
| eval Value=Value/MAX | fields - MAX\
| outputlookup pollution_country_norm.csv

[Generate crime_min_max_by_type.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = `crime_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| stats max(Value) min(Value) by type\
| outputlookup crime_min_max_by_type.csv

[Generate crime_country_norm.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = `crime_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| eventstats max(Value) min(Value) by type\
`make_eu_relative`\
| stats avg(*) AS *\
| transpose 300\
| rename "row 1" AS Value "column" AS Country\
| eventstats max(Value) AS MAX\
| eval Value=Value/MAX | fields - MAX\
| outputlookup crime_country_norm.csv

[Generate airquality_avg_city_country.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = index=satellite sourcetype="simS5seriesForAirQualityEuro/*" \
| stats avg(value) AS value by sourcetype city \
| lookup eucities City AS city OUTPUT Country AS country\
| outputlookup airquality_avg_city_country.csv

[EU_population]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.page.search.mode = verbose
display.page.search.tab = statistics
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = index=worldbank sourcetype="SP.POP.TOTL" | rename country as Country\
| search [|inputlookup eucountries | format]\
| stats last(value) as value by Country | sort - last(value)\
| outputlookup eucountriespopulation.csv

[Generate brightness_avg_city_country.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = index=satellite sourcetype="simS3seriesNighttimeLightsGlob/brightness"\
| stats avg(value) AS value by sourcetype city \
| lookup eucities City AS city OUTPUT Country AS country\
| outputlookup brightness_avg_city_country.csv

[Generate health_country_norm.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = | `health_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| eventstats max(Value) min(Value) by type\
`make_eu_relative`\
| stats avg(*) AS *\
| transpose 300\
| rename "row 1" AS Value "column" AS Country\
| eventstats max(Value) AS MAX\
| eval Value=Value/MAX | fields - MAX\
| outputlookup health_country_norm.csv

[Generate health_min_max_by_type.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = | `health_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| stats max(Value) min(Value) by type\
| outputlookup health_min_max_by_type.csv

[Generate urbanness_avg_city_country.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value","LandCoverDescription","city"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = index=satellite sourcetype="simS3seriesCoverGlobal/coverclass" \
| eval urbanness=if(value=-66,"1","0") \
| lookup eucities City AS city OUTPUT Country AS country\
| stats avg(urbanness) AS value by city, country\
| outputlookup urbanness_avg_city_country.csv

[Generate leafindex_avg_city_country.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value","LandCoverDescription","city"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = index=satellite sourcetype="simS3seriesLaiGlobal/lai" \
| eval laivalue=value*0.166666\
| lookup eucities City AS city OUTPUT Country AS country\
| stats avg(laivalue) AS value by city, country\
| outputlookup leafindex_avg_city_country.csv

[Generate urbanness_country_norm.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = | `urbanness_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| eventstats max(Value) min(Value) by type\
`make_eu_relative`\
| stats avg(*) AS *\
| transpose 300\
| rename "row 1" AS Value "column" AS Country\
| eventstats max(Value) AS MAX\
| eval Value=Value/MAX | fields - MAX\
| outputlookup urbanness_country_norm.csv

[Generate urbanness_min_max_by_type.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = | `urbanness_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| stats max(Value) min(Value) by type\
| outputlookup urbanness_min_max_by_type.csv

[Generate greenness_country_norm.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = | `greenness_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| eventstats max(Value) min(Value) by type\
`make_eu_relative`\
| stats avg(*) AS *\
| transpose 300\
| rename "row 1" AS Value "column" AS Country\
| eventstats max(Value) AS MAX\
| eval Value=Value/MAX | fields - MAX\
| outputlookup greenness_country_norm.csv

[Generate greenness_min_max_by_type.csv]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","country","value"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.show = 0
request.ui_dispatch_app = esa-splunk-app
request.ui_dispatch_view = search
search = | `greenness_events_combined(-1000,1000,-1000,1000,0,1,0,1,0,1,0,1,0,1)`\
| stats max(Value) min(Value) by type\
| outputlookup greenness_min_max_by_type.csv
